"""
–ú–æ–¥—É–ª—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é —á–µ—Ä–µ–∑ APScheduler.
"""
import asyncio
from zoneinfo import ZoneInfo
from apscheduler.schedulers.asyncio import AsyncIOScheduler
import logging

from src.config.config import load_config
from src.llm.client import summarize
from src.telegram.sender import send_report
from src.telegram.telethon_client import get_messages

config = load_config()
CHAT_ID = config['TELEGRAM_CHAT_ID']
TELEGRAM_DIST_CHAT_ID = config['TELEGRAM_DIST_CHAT_ID']
DAY_OFFSET = config['DAY_OFFSET']


async def pipeline(chat_id: str = CHAT_ID):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞–π–ø–ª–∞–π–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞."""
    logging.info('–°—Ç–∞—Ä—Ç –ø–∞–π–ø–ª–∞–π–Ω–∞...')
    try:
        messages = await get_messages(chat_id)
        logging.info(f'–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)} –∏–∑ —á–∞—Ç–∞ —Å ID: {chat_id}')
        logging.info('–ù–∞—á–∞–ª–∞—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ RAG...')
        report = await summarize(messages)
        await send_report(report, TELEGRAM_DIST_CHAT_ID)
        logging.info('–û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')
    except Exception as e:
        logging.error(f'–û—à–∏–±–∫–∞ –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ: {str(e)}', exc_info=True)
        raise


async def schedule_weekly_job(chat_id: str = CHAT_ID):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞ –∏ —Å—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞—á—É."""
    scheduler = AsyncIOScheduler(timezone=ZoneInfo("Europe/Moscow"))
    scheduler.add_job(pipeline, 'cron', day_of_week='sun', hour=18, minute=0, args=[chat_id])
    logging.info('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω. –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–¥–∞—á—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ...')
    # üëá –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–¥–∞—á—É —Å—Ä–∞–∑—É
    await pipeline(chat_id)

    scheduler.start()
    try:
        await asyncio.Event().wait()
    except (KeyboardInterrupt, SystemExit):
        logging.info('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')
        scheduler.shutdown()
